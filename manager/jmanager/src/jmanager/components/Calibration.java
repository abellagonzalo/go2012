/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ComponentPerceptionPanel.java
 *
 * Created on 28-oct-2009, 13:08:37
 */
package jmanager.components;

import jmanager.*;
import java.awt.Transparency;
import java.awt.color.ColorSpace;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferByte;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import bica.*;

/**
 *
 * @author paco
 */
public class Calibration extends javax.swing.JPanel {

	int imgw = 160;
	int imgh = 120;
	int ccpixelStride = 3;
	float u0, v0, fdistx, fdisty;
	float robotx, roboty, robott;
	float roll;

	/** Creates new form ComponentPerceptionPanel */
	public Calibration() {
		initComponents();
		this.u0 = 60.0f;
		this.v0 = 80.0f;
		this.fdistx = 250.0f;
		this.fdisty = 250.0f;
		this.roll = 0.0f;
		this.robotx = this.roboty = this.robott = 0.0f;
	}

	private void sendValues() {
		this.robotx = (float) this.RobotXSlider.getValue();
		this.roboty = (float) this.RobotYSlider.getValue();
		this.robott = (float) this.RobotTSlider.getValue()*(float)Math.PI/180.0f;
		this.u0 = (float) this.U0Slider.getValue();
		this.v0 = (float) this.V0Slider.getValue();
		this.fdistx = (float) this.FdistXSlider.getValue();
		this.fdisty = (float) this.FdistYSlider.getValue();
		this.roll = (float) (this.RollSlider.getValue()/10.0f)*(float)Math.PI/180.0f;

		CalibrationParams newParams = new CalibrationParams();
		newParams.robotx = this.robotx;
		newParams.roboty = this.roboty;
		newParams.robott = this.robott;
		newParams.u0 = this.u0;
		newParams.v0 = this.v0;
		newParams.fdistx = this.fdistx;
		newParams.fdisty = this.fdisty;
		newParams.roll = this.roll;

		JmanagerView.root.getConnection().calibrationPrx.setCalibrationParams(newParams);
	}


	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CaptureButton = new javax.swing.JButton();
        CalibrationImgLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RobotXSlider = new javax.swing.JSlider();
        RobotYSlider = new javax.swing.JSlider();
        RobotTSlider = new javax.swing.JSlider();
        U0Slider = new javax.swing.JSlider();
        V0Slider = new javax.swing.JSlider();
        FdistXSlider = new javax.swing.JSlider();
        FdistYSlider = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        getParamsB = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        RollSlider = new javax.swing.JSlider();
        jLabel11 = new javax.swing.JLabel();
        getParamsButton = new javax.swing.JButton();
        setParamsButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(330, 250));
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(330, 250));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(Calibration.class);
        CaptureButton.setText(resourceMap.getString("CaptureButton.text")); // NOI18N
        CaptureButton.setName("CaptureButton"); // NOI18N
        CaptureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CaptureButtonActionPerformed(evt);
            }
        });

        CalibrationImgLabel.setBackground(resourceMap.getColor("CalibrationImgLabel.background")); // NOI18N
        CalibrationImgLabel.setForeground(resourceMap.getColor("CalibrationImgLabel.foreground")); // NOI18N
        CalibrationImgLabel.setDoubleBuffered(true);
        CalibrationImgLabel.setMaximumSize(new java.awt.Dimension(320, 240));
        CalibrationImgLabel.setMinimumSize(new java.awt.Dimension(320, 240));
        CalibrationImgLabel.setName("CalibrationImgLabel"); // NOI18N
        CalibrationImgLabel.setOpaque(true);
        CalibrationImgLabel.setPreferredSize(new java.awt.Dimension(320, 240));
        CalibrationImgLabel.setRequestFocusEnabled(false);

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        RobotXSlider.setMaximum(3000);
        RobotXSlider.setMinimum(-3000);
        RobotXSlider.setValue(0);
        RobotXSlider.setName("RobotXSlider"); // NOI18N
        RobotXSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RobotXSliderMouseReleased(evt);
            }
        });

        RobotYSlider.setMaximum(3000);
        RobotYSlider.setMinimum(-3000);
        RobotYSlider.setValue(0);
        RobotYSlider.setName("RobotYSlider"); // NOI18N
        RobotYSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RobotYSliderMouseReleased(evt);
            }
        });

        RobotTSlider.setMaximum(180);
        RobotTSlider.setMinimum(-180);
        RobotTSlider.setValue(0);
        RobotTSlider.setName("RobotTSlider"); // NOI18N
        RobotTSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RobotTSliderMouseReleased(evt);
            }
        });

        U0Slider.setMaximum(240);
        U0Slider.setOrientation(javax.swing.JSlider.VERTICAL);
        U0Slider.setValue(120);
        U0Slider.setName("U0Slider"); // NOI18N
        U0Slider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                U0SliderMouseReleased(evt);
            }
        });

        V0Slider.setMaximum(320);
        V0Slider.setOrientation(javax.swing.JSlider.VERTICAL);
        V0Slider.setValue(160);
        V0Slider.setName("V0Slider"); // NOI18N
        V0Slider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                V0SliderMouseReleased(evt);
            }
        });

        FdistXSlider.setMaximum(500);
        FdistXSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        FdistXSlider.setValue(250);
        FdistXSlider.setName("FdistXSlider"); // NOI18N
        FdistXSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                FdistXSliderMouseReleased(evt);
            }
        });

        FdistYSlider.setMaximum(500);
        FdistYSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        FdistYSlider.setValue(250);
        FdistYSlider.setName("FdistYSlider"); // NOI18N
        FdistYSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                FdistYSliderMouseReleased(evt);
            }
        });

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        getParamsB.setText(resourceMap.getString("getParamsB.text")); // NOI18N
        getParamsB.setName("getParamsB"); // NOI18N
        getParamsB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getParamsBActionPerformed(evt);
            }
        });

        jSlider1.setName("jSlider1"); // NOI18N

        RollSlider.setMaximum(45);
        RollSlider.setMinimum(-45);
        RollSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        RollSlider.setValue(0);
        RollSlider.setName("RollSlider"); // NOI18N
        RollSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RollSliderMouseReleased(evt);
            }
        });

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        getParamsButton.setText(resourceMap.getString("getParamsButton.text")); // NOI18N
        getParamsButton.setName("getParamsButton"); // NOI18N
        getParamsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getParamsButtonActionPerformed(evt);
            }
        });

        setParamsButton.setText(resourceMap.getString("setParamsButton.text")); // NOI18N
        setParamsButton.setName("setParamsButton"); // NOI18N
        setParamsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setParamsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(getParamsB)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(U0Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(V0Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(44, 44, 44)
                                        .addComponent(jLabel8)))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FdistXSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(FdistYSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                                        .addComponent(RollSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                                        .addComponent(jLabel11))))
                            .addComponent(CalibrationImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CaptureButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(getParamsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(setParamsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4))
                                        .addGap(40, 40, 40))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(RobotTSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RobotYSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RobotXSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(getParamsB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CaptureButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(getParamsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(setParamsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel4)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel5)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RobotXSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RobotYSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RobotTSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(CalibrationImgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(U0Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(V0Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FdistXSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FdistYSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RollSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void CaptureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CaptureButtonActionPerformed
		displayImage();
	}//GEN-LAST:event_CaptureButtonActionPerformed

	private void RobotXSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RobotXSliderMouseReleased
		this.sendValues();
		this.displayImage();
	}//GEN-LAST:event_RobotXSliderMouseReleased

	private void RobotYSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RobotYSliderMouseReleased
		this.sendValues();
		this.displayImage();
	}//GEN-LAST:event_RobotYSliderMouseReleased

	private void RobotTSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RobotTSliderMouseReleased
		this.sendValues();
		this.displayImage();
	}//GEN-LAST:event_RobotTSliderMouseReleased

	private void U0SliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_U0SliderMouseReleased
		this.sendValues();
		this.displayImage();
	}//GEN-LAST:event_U0SliderMouseReleased

	private void V0SliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_V0SliderMouseReleased
		this.sendValues();
		this.displayImage();
	}//GEN-LAST:event_V0SliderMouseReleased

	private void FdistXSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FdistXSliderMouseReleased
		this.sendValues();
		this.displayImage();
	}//GEN-LAST:event_FdistXSliderMouseReleased

	private void FdistYSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FdistYSliderMouseReleased
		this.sendValues();
		this.displayImage();
	}//GEN-LAST:event_FdistYSliderMouseReleased

        private void getParamsBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getParamsBActionPerformed
                setHSVSliders(JmanagerView.root.getConnection().calibrationPrx.getCalibrationParams());
        }//GEN-LAST:event_getParamsBActionPerformed

        private void RollSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RollSliderMouseReleased
 		this.sendValues();
		this.displayImage();
        }//GEN-LAST:event_RollSliderMouseReleased

        private void getParamsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getParamsButtonActionPerformed
            setHSVSliders(JmanagerView.root.getConnection().calibrationPrx.getCalibrationParams());
            
               /* this.robotx = Params.robotx;
                this.roboty = Params.roboty;
                this.robott = Params.robott;
                this.u0 = Params.u0;
                this.v0 = Params.v0;
		this.fdistx =  Params.fdistx;
		this.fdisty =  Params.fdisty;
		this.roll =  Params.roll;
                
                System.out.println("["+this.robotx+", "+this.roboty+", "+this.robott+", "+this.u0+", "+this.v0+", "+this.fdistx+", "+this.fdisty+", "+this.roll+"]");
                
                this.RobotXSlider.setValue((int)this.robotx);
		this.RobotYSlider.setValue((int)this.roboty);
		this.RobotTSlider.setValue((int)(this.robott*180.0f/Math.PI));
		this.U0Slider.setValue((int)this.u0);
		this.V0Slider.setValue((int)this.v0);
		this.FdistXSlider.setValue((int)this.fdistx);
		this.FdistYSlider.setValue((int)this.fdisty);
		this.RollSlider.setValue((int)(this.roll*180.0f/Math.PI));
                */
                //System.out.println("["+this.robotx+", "+this.roboty+", "+this.robott+", "+this.u0+", "+this.v0+", "+this.fdistx+", "+this.fdisty+", "+this.roll+"]");
                this.displayImage();
        }//GEN-LAST:event_getParamsButtonActionPerformed

        private void setParamsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setParamsButtonActionPerformed
            JmanagerView.root.getConnection().calibrationPrx.saveCalibrationParams();// TODO add your handling code here:
        }//GEN-LAST:event_setParamsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CalibrationImgLabel;
    private javax.swing.JButton CaptureButton;
    private javax.swing.JSlider FdistXSlider;
    private javax.swing.JSlider FdistYSlider;
    private javax.swing.JSlider RobotTSlider;
    private javax.swing.JSlider RobotXSlider;
    private javax.swing.JSlider RobotYSlider;
    private javax.swing.JSlider RollSlider;
    private javax.swing.JSlider U0Slider;
    private javax.swing.JSlider V0Slider;
    private javax.swing.JButton getParamsB;
    private javax.swing.JButton getParamsButton;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JButton setParamsButton;
    // End of variables declaration//GEN-END:variables

	private void printResp(dataResp r) {

		if (r.size < 500) {

			System.out.println("Respuesta: [" + new String(r.data) + "] (" + r.size + ")");
		} else {
			System.out.println("Respuesta: [X] (" + r.size + ")");
		}

	}

	public void displayImageInLabel(byte[] dataImg, JLabel label, int w, int h, int pixelStride) {

		int[] bandOffsets = {2, 1, 0}; //b, g, r
		int scanlineStride = 3 * w; //no extra padding
		DataBuffer buffer = new DataBufferByte(dataImg, w * h);
		WritableRaster raster = Raster.createInterleavedRaster(buffer, w, h, scanlineStride, pixelStride, bandOffsets, null);

		ColorSpace colorSpace = ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB);
		boolean hasAlpha = false;
		boolean isAlphaPremultiplied = false;
		int transparency = Transparency.OPAQUE;
		int transferType = DataBuffer.TYPE_BYTE;
		ColorModel colorModel = new ComponentColorModel(colorSpace, hasAlpha, isAlphaPremultiplied, transparency, transferType);

		BufferedImage img = new BufferedImage(colorModel, raster, isAlphaPremultiplied, null);

		//Display image to the label
		ImageIcon icon = new ImageIcon(img);
		label.setIcon(icon);
	}

	public void displayImage() {
		int w = 320, h = 240;
		int pixelStride = 3; //assuming r, g, b, skip, r, g, b, skip...
		ImageData data = null;
		
		//SRC Image
		try {
			data = JmanagerView.root.getConnection().calibrationPrx.getCalibrationImg();
		} catch (bica.DataNotExistException ex) {
			System.out.println(ex);
		} catch (bica.HardwareFailedException ex) {
			System.out.println(ex);
		}

		displayImageInLabel(data.pixelData, CalibrationImgLabel, w, h, pixelStride);
	}

	private void setHSVSliders(CalibrationParams newParams) {
		try {
			this.robotx = newParams.robotx;
			this.roboty = newParams.roboty;
			this.robott = newParams.robott*180.0f/(float)Math.PI;
			this.u0 = newParams.u0;
			this.v0 = newParams.v0;
			this.fdistx = newParams.fdistx;
			this.fdisty = newParams.fdisty;
			this.roll = (newParams.roll*10.0f)*180.0f/(float)Math.PI;

			RobotXSlider.setValue((int) this.robotx);
			RobotYSlider.setValue((int) this.roboty);
			RobotTSlider.setValue((int) this.robott);
			U0Slider.setValue((int) this.u0);
			V0Slider.setValue((int) this.v0);
			FdistXSlider.setValue((int) this.fdistx);
			FdistYSlider.setValue((int) this.fdisty);
			RollSlider.setValue((int) this.roll);
		} catch(NumberFormatException e) {
			System.err.println("(Calibration) Data error: " + e);
		}
	}
}
