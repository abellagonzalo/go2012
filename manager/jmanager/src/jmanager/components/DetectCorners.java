/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DetectCorners.java
 *
 * Created on 16-feb-2010, 13:25:17
 */

package jmanager.components;

import java.awt.Transparency;
import java.awt.color.ColorSpace;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferByte;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import jmanager.JmanagerView;
import jmanager.dataResp;

/**
 *
 * @author jmortiz
 */
public class DetectCorners extends javax.swing.JPanel {

	private VideoThread videoThread = null;

	/** Creates new form DetectCorners */
	public DetectCorners() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		ActivationCheckBox = new javax.swing.JCheckBox();
		imageLabelLines = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		imageLabelCarpet = new javax.swing.JLabel();
		imageLabelUnion = new javax.swing.JLabel();
		imageLabelReal = new javax.swing.JLabel();
		ActivatedVideo = new javax.swing.JCheckBox();
		BlockWidth = new javax.swing.JSlider();
		CornersMax = new javax.swing.JSlider();
		DistanceMinPoints = new javax.swing.JSlider();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		QualityLevel = new javax.swing.JSlider();

		setName("Form"); // NOI18N

		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(DetectCorners.class);
		ActivationCheckBox.setText(resourceMap.getString("ActivationCheckBox.text")); // NOI18N
		ActivationCheckBox.setName("ActivationCheckBox"); // NOI18N
		ActivationCheckBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ActivationCheckBoxActionPerformed(evt);
			}
		});

		imageLabelLines.setBackground(resourceMap.getColor("imageLabelLines.background")); // NOI18N
		imageLabelLines.setText(resourceMap.getString("imageLabelLines.text")); // NOI18N
		imageLabelLines.setName("imageLabelLines"); // NOI18N
		imageLabelLines.setOpaque(true);

		jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
		jButton1.setName("jButton1"); // NOI18N
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		imageLabelCarpet.setBackground(resourceMap.getColor("imageLabelCarpet.background")); // NOI18N
		imageLabelCarpet.setName("imageLabelCarpet"); // NOI18N
		imageLabelCarpet.setOpaque(true);

		imageLabelUnion.setBackground(resourceMap.getColor("imageLabelUnion.background")); // NOI18N
		imageLabelUnion.setName("imageLabelUnion"); // NOI18N
		imageLabelUnion.setOpaque(true);

		imageLabelReal.setBackground(resourceMap.getColor("imageLabelReal.background")); // NOI18N
		imageLabelReal.setName("imageLabelReal"); // NOI18N
		imageLabelReal.setOpaque(true);

		ActivatedVideo.setText(resourceMap.getString("ActivatedVideo.text")); // NOI18N
		ActivatedVideo.setName("ActivatedVideo"); // NOI18N
		ActivatedVideo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ActivatedVideoActionPerformed(evt);
			}
		});

		BlockWidth.setMaximum(51);
		BlockWidth.setMinimum(11);
		BlockWidth.setMinorTickSpacing(2);
		BlockWidth.setSnapToTicks(true);
		BlockWidth.setValue(31);
		BlockWidth.setName("BlockWidth"); // NOI18N
		BlockWidth.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				BlockWidthMouseReleased(evt);
			}
		});

		CornersMax.setMaximum(20);
		CornersMax.setMinimum(1);
		CornersMax.setValue(5);
		CornersMax.setName("CornersMax"); // NOI18N
		CornersMax.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				CornersMaxMouseReleased(evt);
			}
		});

		DistanceMinPoints.setValue(25);
		DistanceMinPoints.setName("DistanceMinPoints"); // NOI18N
		DistanceMinPoints.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				DistanceMinPointsMouseReleased(evt);
			}
		});

		jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
		jLabel1.setName("jLabel1"); // NOI18N

		jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
		jLabel2.setName("jLabel2"); // NOI18N

		jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
		jLabel3.setName("jLabel3"); // NOI18N

		jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
		jLabel4.setName("jLabel4"); // NOI18N

		QualityLevel.setName("QualityLevel"); // NOI18N
		QualityLevel.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				QualityLevelMouseReleased(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addComponent(ActivationCheckBox)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(ActivatedVideo)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(jButton1))
										.addGroup(layout.createSequentialGroup()
												.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(imageLabelLines, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(imageLabelCarpet, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGap(18, 18, 18)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(layout.createSequentialGroup()
																		.addComponent(imageLabelReal, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(QualityLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(jLabel4)
																				.addComponent(CornersMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(jLabel3)))
																				.addGroup(layout.createSequentialGroup()
																						.addComponent(imageLabelUnion, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																								.addComponent(DistanceMinPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addComponent(BlockWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addComponent(jLabel2)
																								.addComponent(jLabel1))))))
																								.addContainerGap(363, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(ActivationCheckBox)
								.addComponent(jButton1)
								.addComponent(ActivatedVideo))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addGroup(layout.createSequentialGroup()
												.addComponent(imageLabelLines, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18)
												.addComponent(imageLabelCarpet, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(imageLabelUnion, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGroup(layout.createSequentialGroup()
																		.addComponent(jLabel1)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(BlockWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addGap(31, 31, 31)
																		.addComponent(jLabel2)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(DistanceMinPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
																		.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(layout.createSequentialGroup()
																						.addComponent(jLabel3)
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addComponent(CornersMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addGap(18, 18, 18)
																						.addComponent(jLabel4)
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addComponent(QualityLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
																						.addComponent(imageLabelReal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
																						.addContainerGap(194, Short.MAX_VALUE))
		);
	}// </editor-fold>//GEN-END:initComponents

	private void ActivationCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActivationCheckBoxActionPerformed
		if (ActivationCheckBox.isSelected()) {
			JmanagerView.root.getConnection().schedulerPrx.run("DetectCorners");
			//dataResp resp = JmanagerView.root.getConnection().send("run:DetectCorners:");

			//try {
			//	Thread.sleep(3000);
			//} catch (InterruptedException ex) {
			//	Logger.getLogger(DetectCorners.class.getName()).log(Level.SEVERE, null, ex);
			//}

		} else {
			JmanagerView.root.getConnection().schedulerPrx.stop("DetectCorners");
			//dataResp resp = JmanagerView.root.getConnection().send("pause:DetectCorners:");
			//            printResp(resp);
		}

	}//GEN-LAST:event_ActivationCheckBoxActionPerformed




	public void displayImageInLabel(byte[] dataImg, JLabel label, int w, int h, int pixelStride) {

		int[] bandOffsets = {2, 1, 0}; //b, g, r
		int scanlineStride = 3 * w; //no extra padding
		DataBuffer buffer = new DataBufferByte(dataImg, w * h);
		WritableRaster raster = Raster.createInterleavedRaster(buffer, w, h, scanlineStride, pixelStride, bandOffsets, null);

		ColorSpace colorSpace = ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB);
		boolean hasAlpha = false;
		boolean isAlphaPremultiplied = false;
		int transparency = Transparency.OPAQUE;
		int transferType = DataBuffer.TYPE_BYTE;
		ColorModel colorModel = new ComponentColorModel(colorSpace, hasAlpha, isAlphaPremultiplied, transparency, transferType);

		BufferedImage img = new BufferedImage(colorModel, raster, isAlphaPremultiplied, null);

		//Display image to the label
		ImageIcon icon = new ImageIcon(img);
		label.setIcon(icon);
	}

	public void displayAllImages(){
		int widthImg = 160;
		int heightImg = 120;
		int depthImg = 3;

		//setHSVFilter(int cameraSel, string objectSel, float _hmin, float _hmax, float _smin, float _smax, float _vmin, float _vmax)
		//        dataResp aux = JmanagerView.root.getConnection().send("setHSVFilters:White:0:0:0:0:0:255:");
		//        dataResp aux2 = JmanagerView.root.getConnection().send("setHSVFilters:Carpet:110:275:28:249:0:255:");
		dataResp whiteLines =  JmanagerView.root.getConnection().sendImage("getImgCorners:lines:", widthImg, heightImg, depthImg);
		//        dataResp greenCarpet = JmanagerView.root.getConnection().sendImage("getImg:segmented:Carpet:", widthImg, heightImg, depthImg);
		dataResp greenCarpet = JmanagerView.root.getConnection().sendImage("getImgCorners:carpet:", widthImg, heightImg, depthImg);
		dataResp union = JmanagerView.root.getConnection().sendImage("getImgCorners:union:", widthImg, heightImg, depthImg);
		dataResp real = JmanagerView.root.getConnection().sendImage("getImgCorners:real:", widthImg, heightImg, depthImg);
		displayImageInLabel(whiteLines.data, imageLabelLines, widthImg, heightImg, depthImg);
		displayImageInLabel(greenCarpet.data, imageLabelCarpet, widthImg, heightImg, depthImg);
		displayImageInLabel(union.data, imageLabelUnion, widthImg, heightImg, depthImg);
		displayImageInLabel(real.data, imageLabelReal, widthImg, heightImg, depthImg);
	}




	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		displayAllImages();
	}//GEN-LAST:event_jButton1ActionPerformed

	private void ActivatedVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActivatedVideoActionPerformed
		// TODO add your handling code here:
		if (ActivatedVideo.isSelected()) {
			videoThread = new VideoThread(this);
			videoThread.start();
		}

		if (!ActivatedVideo.isSelected()) {
			videoThread.stopThread();
			videoThread = null;
		}
	}//GEN-LAST:event_ActivatedVideoActionPerformed

	private void SetParameters(){
		int distance = DistanceMinPoints.getValue();
		int blockSize = BlockWidth.getValue();
		double quality = 0.5;// QualityLevel.getValue()/100;
		int maxCorners = CornersMax.getValue();
		dataResp params =  JmanagerView.root.getConnection().send("setParameters:"+ distance+":"+ blockSize+ ":"+ quality+ ":"+ maxCorners+ ":");
	}
	private void BlockWidthMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlockWidthMouseReleased
		SetParameters();
	}//GEN-LAST:event_BlockWidthMouseReleased

	private void DistanceMinPointsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DistanceMinPointsMouseReleased
		SetParameters();
	}//GEN-LAST:event_DistanceMinPointsMouseReleased

	private void CornersMaxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CornersMaxMouseReleased
		SetParameters();
	}//GEN-LAST:event_CornersMaxMouseReleased

	private void QualityLevelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QualityLevelMouseReleased
		SetParameters();
	}//GEN-LAST:event_QualityLevelMouseReleased



	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JCheckBox ActivatedVideo;
	private javax.swing.JCheckBox ActivationCheckBox;
	private javax.swing.JSlider BlockWidth;
	private javax.swing.JSlider CornersMax;
	private javax.swing.JSlider DistanceMinPoints;
	private javax.swing.JSlider QualityLevel;
	private javax.swing.JLabel imageLabelCarpet;
	private javax.swing.JLabel imageLabelLines;
	private javax.swing.JLabel imageLabelReal;
	private javax.swing.JLabel imageLabelUnion;
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	// End of variables declaration//GEN-END:variables

}
