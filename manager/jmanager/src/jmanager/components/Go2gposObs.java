/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ComponentPerceptionPanel.java
 *
 * Created on 28-oct-2009, 13:08:37
 */
package jmanager.components;

import jmanager.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author paco
 */
public class Go2gposObs extends javax.swing.JPanel {

	private Go2gposObsThread go2gpost= null;

	/** Creates new form ComponentGTLocalization */
	public Go2gposObs() {
		initComponents();
	}

	public void refresh() {

	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ActivationCheckBox = new javax.swing.JCheckBox();
        FieldLabel = new javax.swing.JLabel();
        ColorCB = new javax.swing.JComboBox();
        getDataButton = new javax.swing.JButton();
        GetDataCheckBox = new javax.swing.JCheckBox();

        setMinimumSize(new java.awt.Dimension(330, 250));
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(330, 250));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(Go2gposObs.class);
        ActivationCheckBox.setText(resourceMap.getString("ActivationCheckBox.text")); // NOI18N
        ActivationCheckBox.setName("ActivationCheckBox"); // NOI18N
        ActivationCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActivationCheckBoxActionPerformed(evt);
            }
        });

        FieldLabel.setBackground(resourceMap.getColor("FieldLabel.background")); // NOI18N
        FieldLabel.setForeground(resourceMap.getColor("FieldLabel.foreground")); // NOI18N
        FieldLabel.setIcon(resourceMap.getIcon("FieldLabel.icon")); // NOI18N
        FieldLabel.setDoubleBuffered(true);
        FieldLabel.setName("FieldLabel"); // NOI18N
        FieldLabel.setOpaque(true);
        FieldLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FieldLabelMouseClicked(evt);
            }
        });

        ColorCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Red", "Blue" }));
        ColorCB.setName("ColorCB"); // NOI18N

        getDataButton.setText(resourceMap.getString("getDataButton.text")); // NOI18N
        getDataButton.setName("getDataButton"); // NOI18N
        getDataButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getDataButtonMouseClicked(evt);
            }
        });

        GetDataCheckBox.setText(resourceMap.getString("GetDataCheckBox.text")); // NOI18N
        GetDataCheckBox.setName("GetDataCheckBox"); // NOI18N
        GetDataCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetDataCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(ActivationCheckBox)
                        .addGap(4, 4, 4))
                    .addComponent(ColorCB, javax.swing.GroupLayout.Alignment.LEADING, 0, 84, Short.MAX_VALUE)
                    .addComponent(GetDataCheckBox, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(getDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(FieldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FieldLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ActivationCheckBox)
                        .addGap(36, 36, 36)
                        .addComponent(ColorCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(getDataButton)
                        .addGap(12, 12, 12)
                        .addComponent(GetDataCheckBox)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void ActivationCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActivationCheckBoxActionPerformed
		if (ActivationCheckBox.isSelected()) {
			JmanagerView.root.getConnection().schedulerPrx.run("Go2gposObs");
			//dataResp resp = JmanagerView.root.getConnection().send("run:Go2gposObs:");

			/*try {
				Thread.sleep(3000);
			} catch (InterruptedException ex) {
				Logger.getLogger(Go2gposObs.class.getName()).log(Level.SEVERE, null, ex);
			}*/

		} else {
			JmanagerView.root.getConnection().schedulerPrx.stop("Go2gposObs");
			//dataResp resp = JmanagerView.root.getConnection().send("pause:Go2gposObs:");
			//printResp(resp);
		}

	}//GEN-LAST:event_ActivationCheckBoxActionPerformed

	private void FieldLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FieldLabelMouseClicked
		double mx = evt.getX();
		double my = evt.getY();
		double centerx, centery;

		double fheight = 5350.0;
		double fwidth  = 7350.0;

		double Ax, Ay;

		centerx = FieldLabel.getWidth()/2.0;
		centery = FieldLabel.getHeight()/2.0;

		Ax = (mx - centerx)/(FieldLabel.getWidth()/2.0);
		Ay = (my - centery)/(FieldLabel.getHeight()/2.0);

		double x, y;

		//Change to official coordinates
		if(ColorCB.getSelectedIndex()==0){
			y = Ay * (fheight/2.0);
			x = -Ax * (fwidth/2.0);
		}else
		{
			x = Ax * (fwidth/2.0);
			y = -Ay * (fheight/2.0);
		}

		if (ActivationCheckBox.isSelected()) {
			JmanagerView.root.getConnection().go2gposObsPrx.setGoalPos(x, y);
			//dataResp resp = JmanagerView.root.getConnection().send("Go2gposObs:setGoalPos:"+x+":"+y+":");
		}else
		{
			System.out.println("("+x+", "+y+")");
		}
	}//GEN-LAST:event_FieldLabelMouseClicked

	private void getDataButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getDataButtonMouseClicked
		getRemoteData();
	}//GEN-LAST:event_getDataButtonMouseClicked

	private void GetDataCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetDataCheckBoxActionPerformed
		if (GetDataCheckBox.isSelected()) {
			go2gpost = new Go2gposObsThread(this);
			go2gpost.start();
		}else
		{
			go2gpost.stopThread();
		}
	}//GEN-LAST:event_GetDataCheckBoxActionPerformed
	/**/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ActivationCheckBox;
    private javax.swing.JComboBox ColorCB;
    private javax.swing.JLabel FieldLabel;
    private javax.swing.JCheckBox GetDataCheckBox;
    private javax.swing.JButton getDataButton;
    // End of variables declaration//GEN-END:variables

	private void printResp(dataResp r) {

		//sbyte[] util = new byte[r.size];

		if (r.size < 500) {

			System.out.println("Respuesta: [" + new String(r.data) + "] (" + r.size + ")");
		} else {
			System.out.println("Respuesta: [X] (" + r.size + ")");
		}

	}

	void getRemoteData() {
		if (ActivationCheckBox.isSelected()) {			
			//dataResp respdata = JmanagerView.root.getConnection().send("Go2gposObs:getDebugData:");			
			String resp = new String(JmanagerView.root.getConnection().componentPrx.getDebugData("Go2gposObs"));

			String[] values = resp.split(":");

			System.out.println("Go2GposObs:\n\tposx: " + Double.parseDouble(values[0])+
					"\tposy: " + Double.parseDouble(values[1])+
					"\n\tgoalvx: " + Double.parseDouble(values[2])+
					"\tgoalvy: " + Double.parseDouble(values[3])
			);

			for(int i=0; i<(resp.split(":").length-4); i=i+2)
			{
				System.out.println("\trep "+i+" ("+Double.parseDouble(values[i+4])+" , "+Double.parseDouble(values[i+5])+")");
			}
		}
	}

}